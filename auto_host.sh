#!/bin/bash
# Versão 1.1.
# Autor: rpf16rj

echo ''
echo '=========================================='
echo ' Script de criação automática '
echo ' de host virtual com SSL, Nginx e Docker. '
echo '=========================================='
echo ''
echo 'Informe o domínio que será apontado para o serviço. Ex: meuservico.com.br:' 
read dominio
echo ''
echo '...'
echo 'Informe a porta em que o serviço/container está publicado neste host. Ex: 9090: ' 
read port
echo ''
echo 'Aguarde, o script irá criar tudo para você! '
echo ''
echo 'Instalando o Nginx...'
echo '...'
sudo apt install nginx -y
echo ''
echo 'Instalando o certbot...'
echo '...'
sudo apt install certbot -y
echo ''
echo ''
echo "##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    server_name $dominio;

    location / {
        proxy_pass http://localhost:$port/;
        proxy_set_header Host $dominio;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}

server {
    listen 80;
    listen [::]:80;
}
" >> "/etc/nginx/sites-available/$dominio"

ln -s /etc/nginx/sites-available/$dominio /etc/nginx/sites-enabled/$dominio
echo ''
echo 'Recarregando configuração do NGINX...'
echo ''
sudo service nginx reload
echo ''

echo 'Deseja habilitar seu domínio para usar HTTPS? É necessário que seu domínio já esteja com o DNS apontando para o IP do servidor, caso contrário causará erro.'
echo 'Digite s ou n'
echo ''
read resp

if [[ "$resp" = "s" ]] ; then

echo 'Criando SSL com Lets Encrypt...'

sudo service nginx stop

sudo certbot certonly --standalone --preferred-challenges http -d $dominio

sudo rm /etc/nginx/sites-available/$dominio /etc/nginx//sites-enabled/$dominio

echo "##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    server_name $dominio;

    location / {
        proxy_pass http://localhost:$port/;
        proxy_set_header Host $dominio;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/$dominio/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/$dominio/privkey.pem; # managed by Certbot
}

server {
    if (\$host = $dominio) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;

    server_name $dominio;
    return 444; # managed by Certbot
}
" >> "/etc/nginx/sites-available/$dominio"

echo "
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

    server_name _;

    return 301 https://$host$request_uri;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

" >> "/etc/nginx/sites-available/default"

ln -s /etc/nginx/sites-available/$dominio /etc/nginx/sites-enabled/$dominio

sudo service nginx start

echo ''

fi

echo "Sucesso! O domínio $dominio já está apontando para o serviço publicado na porta $port."

exit
